<?php
/**
 * Group Grade Base
 */

/**
 * Loading of the system
 *
 * @access private
 */
function groupgrade_init() {
  // Composer
  if (! file_exists(__DIR__.'/vendor/autoload.php'))
    die('Composer is not setup for Groupgrade.
      You need to run "drush dl composer && drush composer install"');

  // Load Composer Dependencies
  require_once __DIR__.'/vendor/autoload.php';
  
  Drupal\ClassLearning\Common\Database::setupCapsule();
  
}

function groupgrade_menu() {
  // Parent Level Menu
  // 
  // My Tasks/Classes/Assignment
  $items['class'] = array(
    'title' => 'PLA Learning System Dashboard',
    'description' => 'Manage Web Services',
    'page callback' => 'groupgrade_base',
    'page arguments' => array('groupgrade_base'),
    'file' => 'groupgrade_form.inc',
    'file path' => drupal_get_path('module', 'groupgrade'),
    
    // Permissions
    'access callback' => 'groupgrade_custom_access',
    'access arguments' => array('authenticated user'),
  );

  // Default Parent Task
  // /class/
  $items['class/default'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Dashboard',
    'weight' => 1,
  );

  $items['class/tasks'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Tasks',
    'page callback' => 'groupgrade_tasks_dashboard',
    'file' => 'Tasks.php',
    'file path' => drupal_get_path('module', 'groupgrade').'/views',

    'page arguments' => array(t('This is the tab "@tabname" in the "basic tabs" example', array('@tabname' => $tabname))),
    'access callback' => TRUE,

    // The weight property overrides the default alphabetic ordering of menu
    // entries, allowing us to get our tabs in the order we want.
    'weight' => 2,
  );

  $items['class/classes'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Classes',
    'page callback' => 'groupgrade_classes_dashboard',
    'file' => 'Classes.php',
    'file path' => drupal_get_path('module', 'groupgrade').'/views',

    'page arguments' => array(t('This is the tab "@tabname" in the "basic tabs" example', array('@tabname' => $tabname))),
    'access callback' => TRUE,

    // The weight property overrides the default alphabetic ordering of menu
    // entries, allowing us to get our tabs in the order we want.
    'weight' => 3,
  );

  $items['class/assignments'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Assignments',
    'page callback' => 'groupgrade_assignments_dashboard',
    'file' => 'Assignments.php',
    'file path' => drupal_get_path('module', 'groupgrade').'/views',

    'page arguments' => array(t('This is the tab "@tabname" in the "basic tabs" example', array('@tabname' => $tabname))),
    'access callback' => TRUE,

    // The weight property overrides the default alphabetic ordering of menu
    // entries, allowing us to get our tabs in the order we want.
    'weight' => 4,
  );

  // Secondary tabs on a per-parent tab basis
  $items['class/tasks/first'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Pending',
    'weight' => 1,
  );

  $items['class/tasks/completed'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Completed',

    'file' => 'Tasks.php',
    'file path' => drupal_get_path('module', 'groupgrade').'/views',

    'page callback' => 'groupgrade_tasks_view_specific',
    'page arguments' => array('completed'),
    'access callback' => TRUE,
    'weight' => 2,
  );

  $items['class/tasks/all'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'All',
    'file' => 'Tasks.php',
    'file path' => drupal_get_path('module', 'groupgrade').'/views',

    'page callback' => 'groupgrade_tasks_view_specific',
    'page arguments' => array('all'),
    'access callback' => TRUE,
    'weight' => 3,
  );

  // Classes
  $items['class/classes/first'] = array(
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'title' => 'Current Classes',
  );

  $items['class/classes/past'] = array(
    'type' => MENU_LOCAL_TASK,
    'title' => 'Past Classes',
    
    'file' => 'Classes.php',
    'file path' => drupal_get_path('module', 'groupgrade').'/views',

    'page callback' => 'groupgrade_classes_view_specific',
    'page arguments' => array('past'),

    'access callback' => TRUE,
  );
  return $items;
}

/**
 * Implements hook_form().
 */
function blog_form($node, $form_state) {
  return array();
}

/**
 * Impliments hook_node_info()
 */
function groupgrade_node_info() {
  return array(
    'assignment' => array(
      'name' => t('Assignment'),
      'base' => 'groupgrade_assignment',
      'description' => t('An assignment for use inside of a course section.'),
      'locked' => TRUE,
    ),

    'problem' => array(
      'name' => t('Problem'),
      'base' => 'groupgrade_problem',
      'description' => t('A problem for use inside of an assignment.'),
      'locked' => TRUE,
    ),

    'solution' => array(
      'name' => t('Solution'),
      'base' => 'groupgrade_solution',
      'description' => t('A solution for use inside of an problem.'),
      'locked' => TRUE,
    ),

    'grade' => array(
      'name' => t('Grade'),
      'base' => 'groupgrade_grade',
      'description' => t('A grade for use inside of a solution.'),
      'locked' => TRUE,
    ),
  );
}

/**
 * Register the Namespaces
 * 
 * @param object
 * @access private
 */
function groupgrade_xautoload($api)
{
  $api->namespaceRoot('Drupal\\ClassLearning');
}

/**
 * Determine whether the current user has the role specified.
 *
 * @param $role_name
 *   The role required for access
 * @return bool
 *   True if the acting user has the role specified.
 */
function groupgrade_custom_access($role_name){
  $access_granted = in_array($role_name, $GLOBALS['user']->roles);
  return $access_granted;
}
